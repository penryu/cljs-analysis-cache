["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$reagent.core$macros","~:imports",null,"~:requires",["^ ","~$ra","~$reagent.ratom","^:","^:"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$with-let",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","~$reagent.core","~:end-column",19,"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",1,"~:max-fixed-arity",1,"~:method-params",["~#list",[["^I",["~$bindings","~$body"]]]],"~:arglists",["^I",[["^J","~$&","^K"]]],"~:arglists-meta",["^I",[null]]],"~:column",11,"~:line",4,"~:macro",true,"~:end-line",4,"^L",["^I",["~$quote",["^I",[["^J","~$&","^K"]]]]],"~:doc","Bind variables as with let, except that when used in a component\n  the bindings are only evaluated once. Also takes an optional finally\n  clause at the end, that is executed when the component is\n  destroyed."],"^5","~$reagent.core$macros/with-let","^A","reagent/core.cljc","^C",19,"^D",["^ ","^E",true,"^F",1,"^G",1,"^H",["^I",[["^I",["^J","^K"]]]],"^L",["^I",[["^J","~$&","^K"]]],"^M",["^I",[null]]],"^H",["^I",[["^I",["^J","^K"]]]],"~:protocol-impl",null,"^F",1,"^M",["^I",[null]],"^N",1,"^E",true,"~:methods",[["^ ","^F",1,"^E",true,"~:tag",["^4",["~$seq","~$cljs.core/IList"]]]],"^O",4,"^P",true,"~:ret-tag","~$any","^Q",4,"^G",1,"~:fn-var",false,"^L",["^I",[["^J","~$&","^K"]]],"^S","Bind variables as with let, except that when used in a component\n  the bindings are only evaluated once. Also takes an optional finally\n  clause at the end, that is executed when the component is\n  destroyed."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^9","^:","^:","^:"],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~$reagent.ratom/with-let"]],"~:order",["^15"]],"^S",null]