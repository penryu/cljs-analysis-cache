["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","clojure/test/check/random/longs/bit_count_impl.cljs","~:line",11,"~:column",2,"~:end-line",11,"~:end-column",48,"~:author","Gary Fredericks"],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core"],"~:use-macros",null,"~:excludes",["~#set",["~$bit-count"]],"~:name","~$clojure.test.check.random.longs.bit-count-impl","~:reader-aliases",["^ "],"~:imports",null,"~:requires",["^ ","^=","^=","~$goog","^G"],"~:seen",["^@",[]],"~:uses",null,"~:defs",["^ ","~$lookup",["^ ","^2",["^ ","^3","clojure/test/check/random/longs/bit_count_impl.cljs","^4",18,"^5",16,"^6",18,"^7",22,"~:private",true],"^L",true,"^B","~$clojure.test.check.random.longs.bit-count-impl/lookup","^3","clojure/test/check/random/longs/bit_count_impl.cljs","^7",22,"^5",1,"^4",18,"^6",18,"~:tag","~$array"],"^A",["^ ","~:protocol-inline",null,"^2",["^ ","^3","clojure/test/check/random/longs/bit_count_impl.cljs","^4",26,"^5",7,"^6",26,"^7",16,"~:arglists",["~#list",["~$quote",["^R",[["~$x"]]]]],"~:doc","Returns a JS number (not a Long), the number of set bits in the\n  given Long."],"^B","~$clojure.test.check.random.longs.bit-count-impl/bit-count","^3","clojure/test/check/random/longs/bit_count_impl.cljs","^7",16,"~:method-params",["^R",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^R",[null,null]],"^5",1,"~:variadic?",false,"^4",26,"~:ret-tag","~$number","^6",26,"~:max-fixed-arity",1,"~:fn-var",true,"^Q",["^R",["^S",["^R",[["~$x"]]]]],"^T","Returns a JS number (not a Long), the number of set bits in the\n  given Long."]],"~:require-macros",["^ ","^=","^="],"~:flags",["^ "],"~:js-deps",[],"~:deps",["^G","^="]]