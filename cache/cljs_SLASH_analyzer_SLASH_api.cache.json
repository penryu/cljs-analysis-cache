["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","This is intended to be a stable api for those who need programmatic access\n  to the analyzer.","~:file","cljs/analyzer/api.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",22],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core"],"~:use-macros",null,"~:excludes",["~#set",["~$find-ns","~$remove-ns","~$ns-publics","~$ns-resolve","~$ns-interns","~$all-ns","~$resolve"]],"~:name","~$cljs.analyzer.api","~:reader-aliases",["^ "],"~:imports",null,"~:requires",["^ ","~$cljs.analyzer","^M","~$ana","^M","~$cljs.env","^O","~$env","^O","^=","^=","~$goog","^Q"],"~:seen",["^@",["~:require"]],"~:shadow/js-access-global",["^@",["Error"]],"~:uses",null,"~:defs",["^ ","^A",["^ ","~:protocol-inline",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",221,"^6",7,"^7",221,"^8",14,"~:arglists",["~#list",["~$quote",["^Y",[["~$sym"],["~$state","^["]]]]],"^3","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns.","~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[["^["],["^10","^["]],"^X",["^Y",[["^["],["^10","^["]]],"~:arglists-meta",["^Y",[null,null]]]],"^H","~$cljs.analyzer.api/find-ns","^4","cljs/analyzer/api.cljc","^8",14,"^11",["^ ","^12",false,"^13",2,"^14",2,"^15",[["^["],["^10","^["]],"^X",["^Y",[["^["],["^10","^["]]],"^16",["^Y",[null,null]]],"^15",[["^["],["^10","^["]],"~:protocol-impl",null,"^13",2,"^16",["^Y",[null,null]],"^6",1,"^12",false,"~:methods",[["^ ","^13",1,"^12",false,"~:tag","~$any"],["^ ","^13",2,"^12",false,"^1:","^1;"]],"^5",221,"^7",221,"^14",2,"~:fn-var",true,"^X",["^Y",[["^["],["^10","^["]]],"^3","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns."],"^B",["^ ","^W",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",263,"^6",7,"^7",263,"^8",16,"^X",["^Y",["^Z",["^Y",[["~$ns"],["^10","^1="]]]]],"^3","Removes the namespace named by the symbol.","^11",["^ ","^12",false,"^13",2,"^14",2,"^15",[["^1="],["^10","^1="]],"^X",["^Y",[["^1="],["^10","^1="]]],"^16",["^Y",[null,null]]]],"^H","~$cljs.analyzer.api/remove-ns","^4","cljs/analyzer/api.cljc","^8",16,"^11",["^ ","^12",false,"^13",2,"^14",2,"^15",[["^1="],["^10","^1="]],"^X",["^Y",[["^1="],["^10","^1="]]],"^16",["^Y",[null,null]]],"^15",[["^1="],["^10","^1="]],"^18",null,"^13",2,"^16",["^Y",[null,null]],"^6",1,"^12",false,"^19",[["^ ","^13",1,"^12",false,"^1:","^1;"],["^ ","^13",2,"^12",false,"^1:",["^@",[null,"^1;"]]]],"^5",263,"^7",263,"^14",2,"^1<",true,"^X",["^Y",[["^1="],["^10","^1="]]],"^3","Removes the namespace named by the symbol."],"^C",["^ ","^W",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",241,"^6",7,"^7",241,"^8",17,"^X",["^Y",["^Z",["^Y",[["^1="],["^10","^1="]]]]],"^3","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars.","^11",["^ ","^12",false,"^13",2,"^14",2,"^15",[["^1="],["^10","^1="]],"^X",["^Y",[["^1="],["^10","^1="]]],"^16",["^Y",[null,null]]]],"^H","~$cljs.analyzer.api/ns-publics","^4","cljs/analyzer/api.cljc","^8",17,"^11",["^ ","^12",false,"^13",2,"^14",2,"^15",[["^1="],["^10","^1="]],"^X",["^Y",[["^1="],["^10","^1="]]],"^16",["^Y",[null,null]]],"^15",[["^1="],["^10","^1="]],"^18",null,"^13",2,"^16",["^Y",[null,null]],"^6",1,"^12",false,"^19",[["^ ","^13",1,"^12",false,"^1:","^1;"],["^ ","^13",2,"^12",false,"^1:",["^@",[null,"~$clj","^1;"]]]],"^5",241,"^7",241,"^14",2,"^1<",true,"^X",["^Y",[["^1="],["^10","^1="]]],"^3","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars."],"~$get-options",["^ ","^W",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",102,"^6",7,"^7",102,"^8",18,"^X",["^Y",["^Z",["^Y",[[],["^10"]]]]],"^3","Return the compiler options from compiler state.","^11",["^ ","^12",false,"^13",1,"^14",1,"^15",[[],["^10"]],"^X",["^Y",[[],["^10"]]],"^16",["^Y",[null,null]]]],"^H","~$cljs.analyzer.api/get-options","^4","cljs/analyzer/api.cljc","^8",18,"^11",["^ ","^12",false,"^13",1,"^14",1,"^15",[[],["^10"]],"^X",["^Y",[[],["^10"]]],"^16",["^Y",[null,null]]],"^15",[[],["^10"]],"^18",null,"^13",1,"^16",["^Y",[null,null]],"^6",1,"^12",false,"^19",[["^ ","^13",0,"^12",false,"^1:","^1;"],["^ ","^13",1,"^12",false,"^1:",["^@",["^1;","~$clj-nil"]]]],"^5",102,"^7",102,"^14",1,"^1<",true,"^X",["^Y",[[],["^10"]]],"^3","Return the compiler options from compiler state."],"~$warning-message",["^ ","^W",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",91,"^6",7,"^7",91,"^8",22,"^X",["^Y",["^Z",["^Y",[["~$warn-type","~$warn-info"]]]]],"^3","Helper for generating the standard analyzer messages for warnings. Should be\n  passed warn-type and warn-info. See with-warning-handlers."],"^H","~$cljs.analyzer.api/warning-message","^4","cljs/analyzer/api.cljc","^8",22,"^15",["^Y",[["^1E","^1F"]]],"^18",null,"^16",["^Y",[null,null]],"^6",1,"^12",false,"^5",91,"~:ret-tag","^1;","^7",91,"^14",2,"^1<",true,"^X",["^Y",["^Z",["^Y",[["^1E","^1F"]]]]],"^3","Helper for generating the standard analyzer messages for warnings. Should be\n  passed warn-type and warn-info. See with-warning-handlers."],"~$warning-enabled?",["^ ","^W",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",69,"^6",7,"^7",69,"^8",23,"^X",["^Y",["^Z",["^Y",[["~$warning-type"]]]]],"^3","Test if the given warning-type is enabled."],"^H","~$cljs.analyzer.api/warning-enabled?","^4","cljs/analyzer/api.cljc","^8",23,"^15",["^Y",[["^1J"]]],"^18",null,"^16",["^Y",[null,null]],"^6",1,"^12",false,"^5",69,"^1H","^1;","^7",69,"^14",1,"^1<",true,"^X",["^Y",["^Z",["^Y",[["^1J"]]]]],"^3","Test if the given warning-type is enabled."],"~$current-state",["^ ","^W",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",36,"^6",7,"^7",36,"^8",20,"^X",["^Y",["^Z",["^Y",[[]]]]],"^3","Return the current compiler state atom."],"^H","~$cljs.analyzer.api/current-state","^4","cljs/analyzer/api.cljc","^8",20,"^15",["^Y",[[]]],"^18",null,"^16",["^Y",[null,null]],"^6",1,"^12",false,"^5",36,"^1H","^1;","^7",36,"^14",0,"^1<",true,"^X",["^Y",["^Z",["^Y",[[]]]]],"^3","Return the current compiler state atom."],"^D",["^ ","^W",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",254,"^6",7,"^7",254,"^8",17,"^X",["^Y",["^Z",["^Y",[["^1=","^["],["^10","^1=","^["]]]]],"^3","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.","^11",["^ ","^12",false,"^13",3,"^14",3,"^15",[["^1=","^["],["^10","^1=","^["]],"^X",["^Y",[["^1=","^["],["^10","^1=","^["]]],"^16",["^Y",[null,null]]]],"^H","~$cljs.analyzer.api/ns-resolve","^4","cljs/analyzer/api.cljc","^8",17,"^11",["^ ","^12",false,"^13",3,"^14",3,"^15",[["^1=","^["],["^10","^1=","^["]],"^X",["^Y",[["^1=","^["],["^10","^1=","^["]]],"^16",["^Y",[null,null]]],"^15",[["^1=","^["],["^10","^1=","^["]],"^18",null,"^13",3,"^16",["^Y",[null,null]],"^6",1,"^12",false,"^19",[["^ ","^13",2,"^12",false,"^1:","^1;"],["^ ","^13",3,"^12",false,"^1:","^1;"]],"^5",254,"^7",254,"^14",3,"^1<",true,"^X",["^Y",[["^1=","^["],["^10","^1=","^["]]],"^3","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var."],"~$enabled-warnings",["^ ","^W",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",97,"^6",7,"^7",97,"^8",23,"^X",["^Y",["^Z",["^Y",[[]]]]],"^3","Get the enabled warning types."],"^H","~$cljs.analyzer.api/enabled-warnings","^4","cljs/analyzer/api.cljc","^8",23,"^15",["^Y",[[]]],"^18",null,"^16",["^Y",[null,null]],"^6",1,"^12",false,"^5",97,"^1H","^1;","^7",97,"^14",0,"^1<",true,"^X",["^Y",["^Z",["^Y",[[]]]]],"^3","Get the enabled warning types."],"~$empty-state",["^ ","^W",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",25,"^6",7,"^7",25,"^8",18,"^X",["^Y",["^Z",["^Y",[[],["~$opts"]]]]],"^3","Creates an empty compilation state Atom<Map>. The optional opts arg is a map\n   representing the compiler configuration. See the documentation\n   for details: https://clojurescript.org/reference/compiler-options","^11",["^ ","^12",false,"^13",1,"^14",1,"^15",[[],["^1R"]],"^X",["^Y",[[],["^1R"]]],"^16",["^Y",[null,null]]]],"^H","~$cljs.analyzer.api/empty-state","^4","cljs/analyzer/api.cljc","^8",18,"^11",["^ ","^12",false,"^13",1,"^14",1,"^15",[[],["^1R"]],"^X",["^Y",[[],["^1R"]]],"^16",["^Y",[null,null]]],"^15",[[],["^1R"]],"^18",null,"^13",1,"^16",["^Y",[null,null]],"^6",1,"^12",false,"^19",[["^ ","^13",0,"^12",false,"^1:","^1;"],["^ ","^13",1,"^12",false,"^1:","~$cljs.core/Atom"]],"^5",25,"^7",25,"^14",1,"^1<",true,"^X",["^Y",[[],["^1R"]]],"^3","Creates an empty compilation state Atom<Map>. The optional opts arg is a map\n   representing the compiler configuration. See the documentation\n   for details: https://clojurescript.org/reference/compiler-options"],"~$default-passes",["^ ","^2",["^ ","^4","cljs/analyzer/api.cljc","^5",117,"^6",3,"^7",117,"^8",17,"^3","ClojureScript's default analysis passes."],"^H","~$cljs.analyzer.api/default-passes","^4","cljs/analyzer/api.cljc","^8",17,"^6",1,"^5",115,"^7",117,"^1:","~$cljs.core/IVector","^3","ClojureScript's default analysis passes."],"~$empty-env",["^ ","^W",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",57,"^6",7,"^7",57,"^8",16,"^X",["^Y",["^Z",["^Y",[[]]]]],"^3","Creates an empty analysis environment."],"^H","~$cljs.analyzer.api/empty-env","^4","cljs/analyzer/api.cljc","^8",16,"^15",["^Y",[[]]],"^18",null,"^16",["^Y",[null,null]],"^6",1,"^12",false,"^5",57,"^1H","^1;","^7",57,"^14",0,"^1<",true,"^X",["^Y",["^Z",["^Y",[[]]]]],"^3","Creates an empty analysis environment."],"~$default-warning-handler",["^ ","^W",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",74,"^6",7,"^7",74,"^8",30,"^X",["^Y",["^Z",["^Y",[["^1J","^P","~$extra"]]]]],"^3","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^H","~$cljs.analyzer.api/default-warning-handler","^4","cljs/analyzer/api.cljc","^8",30,"^15",["^Y",[["^1J","^P","^1["]]],"^18",null,"^16",["^Y",[null,null]],"^6",1,"^12",false,"^5",74,"^1H",["^@",[null,"^1C"]],"^7",74,"^14",3,"^1<",true,"^X",["^Y",["^Z",["^Y",[["^1J","^P","^1["]]]]],"^3","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^E",["^ ","^W",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",230,"^6",7,"^7",230,"^8",17,"^X",["^Y",["^Z",["^Y",[["^1="],["^10","^1="]]]]],"^3","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars.","^11",["^ ","^12",false,"^13",2,"^14",2,"^15",[["^1="],["^10","^1="]],"^X",["^Y",[["^1="],["^10","^1="]]],"^16",["^Y",[null,null]]]],"^H","~$cljs.analyzer.api/ns-interns","^4","cljs/analyzer/api.cljc","^8",17,"^11",["^ ","^12",false,"^13",2,"^14",2,"^15",[["^1="],["^10","^1="]],"^X",["^Y",[["^1="],["^10","^1="]]],"^16",["^Y",[null,null]]],"^15",[["^1="],["^10","^1="]],"^18",null,"^13",2,"^16",["^Y",[null,null]],"^6",1,"^12",false,"^19",[["^ ","^13",1,"^12",false,"^1:","^1;"],["^ ","^13",2,"^12",false,"^1:",["^@",["^1;","^1C"]]]],"^5",230,"^7",230,"^14",2,"^1<",true,"^X",["^Y",[["^1="],["^10","^1="]]],"^3","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars."],"^F",["^ ","^W",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",213,"^6",7,"^7",213,"^8",13,"^X",["^Y",["^Z",["^Y",[[],["^10"]]]]],"^3","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances.","^11",["^ ","^12",false,"^13",1,"^14",1,"^15",[[],["^10"]],"^X",["^Y",[[],["^10"]]],"^16",["^Y",[null,null]]]],"^H","~$cljs.analyzer.api/all-ns","^4","cljs/analyzer/api.cljc","^8",13,"^11",["^ ","^12",false,"^13",1,"^14",1,"^15",[[],["^10"]],"^X",["^Y",[[],["^10"]]],"^16",["^Y",[null,null]]],"^15",[[],["^10"]],"^18",null,"^13",1,"^16",["^Y",[null,null]],"^6",1,"^12",false,"^19",[["^ ","^13",0,"^12",false,"^1:","^1;"],["^ ","^13",1,"^12",false,"^1:",["^@",["~$cljs.core/KeySeq","^1C"]]]],"^5",213,"^7",213,"^14",1,"^1<",true,"^X",["^Y",[[],["^10"]]],"^3","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances."],"~$current-file",["^ ","^W",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",41,"^6",7,"^7",41,"^8",19,"^X",["^Y",["^Z",["^Y",[[]]]]],"^3","Return the current file under analysis or compilation."],"^H","~$cljs.analyzer.api/current-file","^4","cljs/analyzer/api.cljc","^8",19,"^15",["^Y",[[]]],"^18",null,"^16",["^Y",[null,null]],"^6",1,"^12",false,"^5",41,"^1H","^1;","^7",41,"^14",0,"^1<",true,"^X",["^Y",["^Z",["^Y",[[]]]]],"^3","Return the current file under analysis or compilation."],"~$current-ns",["^ ","^W",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",46,"^6",7,"^7",46,"^8",17,"^X",["^Y",["^Z",["^Y",[[]]]]],"^3","Return the current ns under analysis or compilation."],"^H","~$cljs.analyzer.api/current-ns","^4","cljs/analyzer/api.cljc","^8",17,"^15",["^Y",[[]]],"^18",null,"^16",["^Y",[null,null]],"^6",1,"^12",false,"^5",46,"^1H","^1;","^7",46,"^14",0,"^1<",true,"^X",["^Y",["^Z",["^Y",[[]]]]],"^3","Return the current ns under analysis or compilation."],"^G",["^ ","^W",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",201,"^6",7,"^7",201,"^8",14,"^X",["^Y",["^Z",["^Y",[["^P","^["]]]]],"^3","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"^H","~$cljs.analyzer.api/resolve","^4","cljs/analyzer/api.cljc","^8",14,"^15",["^Y",[["^P","^["]]],"^18",null,"^16",["^Y",[null,null]],"^6",1,"^12",false,"^5",201,"^7",201,"^14",2,"^1<",true,"^X",["^Y",["^Z",["^Y",[["^P","^["]]]]],"^3","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"~$get-js-index",["^ ","^W",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",108,"^6",7,"^7",108,"^8",19,"^X",["^Y",["^Z",["^Y",[[],["^10"]]]]],"^3","Return the currently computed Google Closure js dependency index from the\n  compiler state.","^11",["^ ","^12",false,"^13",1,"^14",1,"^15",[[],["^10"]],"^X",["^Y",[[],["^10"]]],"^16",["^Y",[null,null]]]],"^H","~$cljs.analyzer.api/get-js-index","^4","cljs/analyzer/api.cljc","^8",19,"^11",["^ ","^12",false,"^13",1,"^14",1,"^15",[[],["^10"]],"^X",["^Y",[[],["^10"]]],"^16",["^Y",[null,null]]],"^15",[[],["^10"]],"^18",null,"^13",1,"^16",["^Y",[null,null]],"^6",1,"^12",false,"^19",[["^ ","^13",0,"^12",false,"^1:","^1;"],["^ ","^13",1,"^12",false,"^1:",["^@",["^1;","^1C"]]]],"^5",108,"^7",108,"^14",1,"^1<",true,"^X",["^Y",[[],["^10"]]],"^3","Return the currently computed Google Closure js dependency index from the\n  compiler state."]],"~:require-macros",["^ ","^=","^="],"~:cljs.analyzer/constants",["^ ","^R",["^@",["~:cljs.analyzer/namespaces","~:private","~:macros","~:js-dependency-index","^V","~:options"]],"~:order",["^2A","^2@","^2=","^2?","^V","^2>"]],"~:flags",["^ ","^S",["^@",[]]],"~:js-deps",[],"~:deps",["^Q","^=","^M","^O"]]