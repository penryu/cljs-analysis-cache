["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","This is intended to be a stable api for those who need programmatic access\n  to the analyzer.","~:file","cljs/analyzer/api.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",22],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core"],"~:use-macros",null,"~:excludes",["~#set",["~$find-ns","~$remove-ns","~$ns-publics","~$ns-resolve","~$ns-interns","~$all-ns","~$resolve"]],"~:name","~$cljs.analyzer.api","~:imports",null,"~:requires",["^ ","~$cljs.analyzer","^L","~$ana","^L","~$cljs.env","^N","~$env","^N","^=","^=","~$goog","^P"],"~:seen",["^@",["~:require"]],"~:shadow/js-access-global",["^@",["Error"]],"~:uses",null,"~:defs",["^ ","^A",["^ ","~:protocol-inline",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",220,"^6",7,"^7",220,"^8",14,"~:arglists",["~#list",["~$quote",["^X",[["~$sym"],["~$state","^Z"]]]]],"^3","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns.","~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[["^Z"],["^[","^Z"]],"^W",["^X",[["^Z"],["^[","^Z"]]],"~:arglists-meta",["^X",[null,null]]]],"^H","~$cljs.analyzer.api/find-ns","^4","cljs/analyzer/api.cljc","^8",14,"^10",["^ ","^11",false,"^12",2,"^13",2,"^14",[["^Z"],["^[","^Z"]],"^W",["^X",[["^Z"],["^[","^Z"]]],"^15",["^X",[null,null]]],"^14",[["^Z"],["^[","^Z"]],"~:protocol-impl",null,"^12",2,"^15",["^X",[null,null]],"^6",1,"^11",false,"~:methods",[["^ ","^12",1,"^11",false,"~:tag","~$any"],["^ ","^12",2,"^11",false,"^19",["^@",[null,"^1:"]]]],"^5",220,"^7",220,"^13",2,"~:fn-var",true,"^W",["^X",[["^Z"],["^[","^Z"]]],"^3","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns."],"^B",["^ ","^V",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",262,"^6",7,"^7",262,"^8",16,"^W",["^X",["^Y",["^X",[["~$ns"],["^[","^1<"]]]]],"^3","Removes the namespace named by the symbol.","^10",["^ ","^11",false,"^12",2,"^13",2,"^14",[["^1<"],["^[","^1<"]],"^W",["^X",[["^1<"],["^[","^1<"]]],"^15",["^X",[null,null]]]],"^H","~$cljs.analyzer.api/remove-ns","^4","cljs/analyzer/api.cljc","^8",16,"^10",["^ ","^11",false,"^12",2,"^13",2,"^14",[["^1<"],["^[","^1<"]],"^W",["^X",[["^1<"],["^[","^1<"]]],"^15",["^X",[null,null]]],"^14",[["^1<"],["^[","^1<"]],"^17",null,"^12",2,"^15",["^X",[null,null]],"^6",1,"^11",false,"^18",[["^ ","^12",1,"^11",false,"^19","^1:"],["^ ","^12",2,"^11",false,"^19",["^@",[null,"^1:"]]]],"^5",262,"^7",262,"^13",2,"^1;",true,"^W",["^X",[["^1<"],["^[","^1<"]]],"^3","Removes the namespace named by the symbol."],"^C",["^ ","^V",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",240,"^6",7,"^7",240,"^8",17,"^W",["^X",["^Y",["^X",[["^1<"],["^[","^1<"]]]]],"^3","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars.","^10",["^ ","^11",false,"^12",2,"^13",2,"^14",[["^1<"],["^[","^1<"]],"^W",["^X",[["^1<"],["^[","^1<"]]],"^15",["^X",[null,null]]]],"^H","~$cljs.analyzer.api/ns-publics","^4","cljs/analyzer/api.cljc","^8",17,"^10",["^ ","^11",false,"^12",2,"^13",2,"^14",[["^1<"],["^[","^1<"]],"^W",["^X",[["^1<"],["^[","^1<"]]],"^15",["^X",[null,null]]],"^14",[["^1<"],["^[","^1<"]],"^17",null,"^12",2,"^15",["^X",[null,null]],"^6",1,"^11",false,"^18",[["^ ","^12",1,"^11",false,"^19","^1:"],["^ ","^12",2,"^11",false,"^19",["^@",[null,"~$clj","^1:"]]]],"^5",240,"^7",240,"^13",2,"^1;",true,"^W",["^X",[["^1<"],["^[","^1<"]]],"^3","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars."],"~$get-options",["^ ","^V",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",102,"^6",7,"^7",102,"^8",18,"^W",["^X",["^Y",["^X",[[],["^["]]]]],"^3","Return the compiler options from compiler state.","^10",["^ ","^11",false,"^12",1,"^13",1,"^14",[[],["^["]],"^W",["^X",[[],["^["]]],"^15",["^X",[null,null]]]],"^H","~$cljs.analyzer.api/get-options","^4","cljs/analyzer/api.cljc","^8",18,"^10",["^ ","^11",false,"^12",1,"^13",1,"^14",[[],["^["]],"^W",["^X",[[],["^["]]],"^15",["^X",[null,null]]],"^14",[[],["^["]],"^17",null,"^12",1,"^15",["^X",[null,null]],"^6",1,"^11",false,"^18",[["^ ","^12",0,"^11",false,"^19","^1:"],["^ ","^12",1,"^11",false,"^19",["^@",["^1:","~$clj-nil"]]]],"^5",102,"^7",102,"^13",1,"^1;",true,"^W",["^X",[[],["^["]]],"^3","Return the compiler options from compiler state."],"~$warning-message",["^ ","^V",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",91,"^6",7,"^7",91,"^8",22,"^W",["^X",["^Y",["^X",[["~$warn-type","~$warn-info"]]]]],"^3","Helper for generating the standard analyzer messages for warnings. Should be\n  passed warn-type and warn-info. See with-warning-handlers."],"^H","~$cljs.analyzer.api/warning-message","^4","cljs/analyzer/api.cljc","^8",22,"^14",["^X",[["^1D","^1E"]]],"^17",null,"^15",["^X",[null,null]],"^6",1,"^11",false,"^5",91,"~:ret-tag","^1:","^7",91,"^13",2,"^1;",true,"^W",["^X",["^Y",["^X",[["^1D","^1E"]]]]],"^3","Helper for generating the standard analyzer messages for warnings. Should be\n  passed warn-type and warn-info. See with-warning-handlers."],"~$warning-enabled?",["^ ","^V",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",69,"^6",7,"^7",69,"^8",23,"^W",["^X",["^Y",["^X",[["~$warning-type"]]]]],"^3","Test if the given warning-type is enabled."],"^H","~$cljs.analyzer.api/warning-enabled?","^4","cljs/analyzer/api.cljc","^8",23,"^14",["^X",[["^1I"]]],"^17",null,"^15",["^X",[null,null]],"^6",1,"^11",false,"^5",69,"^1G","^1:","^7",69,"^13",1,"^1;",true,"^W",["^X",["^Y",["^X",[["^1I"]]]]],"^3","Test if the given warning-type is enabled."],"~$current-state",["^ ","^V",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",36,"^6",7,"^7",36,"^8",20,"^W",["^X",["^Y",["^X",[[]]]]],"^3","Return the current compiler state atom."],"^H","~$cljs.analyzer.api/current-state","^4","cljs/analyzer/api.cljc","^8",20,"^14",["^X",[[]]],"^17",null,"^15",["^X",[null,null]],"^6",1,"^11",false,"^5",36,"^1G","^1:","^7",36,"^13",0,"^1;",true,"^W",["^X",["^Y",["^X",[[]]]]],"^3","Return the current compiler state atom."],"^D",["^ ","^V",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",253,"^6",7,"^7",253,"^8",17,"^W",["^X",["^Y",["^X",[["^1<","^Z"],["^[","^1<","^Z"]]]]],"^3","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.","^10",["^ ","^11",false,"^12",3,"^13",3,"^14",[["^1<","^Z"],["^[","^1<","^Z"]],"^W",["^X",[["^1<","^Z"],["^[","^1<","^Z"]]],"^15",["^X",[null,null]]]],"^H","~$cljs.analyzer.api/ns-resolve","^4","cljs/analyzer/api.cljc","^8",17,"^10",["^ ","^11",false,"^12",3,"^13",3,"^14",[["^1<","^Z"],["^[","^1<","^Z"]],"^W",["^X",[["^1<","^Z"],["^[","^1<","^Z"]]],"^15",["^X",[null,null]]],"^14",[["^1<","^Z"],["^[","^1<","^Z"]],"^17",null,"^12",3,"^15",["^X",[null,null]],"^6",1,"^11",false,"^18",[["^ ","^12",2,"^11",false,"^19","^1:"],["^ ","^12",3,"^11",false,"^19",["^@",[null,"^1:"]]]],"^5",253,"^7",253,"^13",3,"^1;",true,"^W",["^X",[["^1<","^Z"],["^[","^1<","^Z"]]],"^3","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var."],"~$enabled-warnings",["^ ","^V",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",97,"^6",7,"^7",97,"^8",23,"^W",["^X",["^Y",["^X",[[]]]]],"^3","Get the enabled warning types."],"^H","~$cljs.analyzer.api/enabled-warnings","^4","cljs/analyzer/api.cljc","^8",23,"^14",["^X",[[]]],"^17",null,"^15",["^X",[null,null]],"^6",1,"^11",false,"^5",97,"^1G","^1:","^7",97,"^13",0,"^1;",true,"^W",["^X",["^Y",["^X",[[]]]]],"^3","Get the enabled warning types."],"~$empty-state",["^ ","^V",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",25,"^6",7,"^7",25,"^8",18,"^W",["^X",["^Y",["^X",[[],["~$opts"]]]]],"^3","Creates an empty compilation state Atom<Map>. The optional opts arg is a map\n   representing the compiler configuration. See the documentation\n   for details: https://clojurescript.org/reference/compiler-options","^10",["^ ","^11",false,"^12",1,"^13",1,"^14",[[],["^1Q"]],"^W",["^X",[[],["^1Q"]]],"^15",["^X",[null,null]]]],"^H","~$cljs.analyzer.api/empty-state","^4","cljs/analyzer/api.cljc","^8",18,"^10",["^ ","^11",false,"^12",1,"^13",1,"^14",[[],["^1Q"]],"^W",["^X",[[],["^1Q"]]],"^15",["^X",[null,null]]],"^14",[[],["^1Q"]],"^17",null,"^12",1,"^15",["^X",[null,null]],"^6",1,"^11",false,"^18",[["^ ","^12",0,"^11",false,"^19","^1:"],["^ ","^12",1,"^11",false,"^19","~$cljs.core/Atom"]],"^5",25,"^7",25,"^13",1,"^1;",true,"^W",["^X",[[],["^1Q"]]],"^3","Creates an empty compilation state Atom<Map>. The optional opts arg is a map\n   representing the compiler configuration. See the documentation\n   for details: https://clojurescript.org/reference/compiler-options"],"~$default-passes",["^ ","^2",["^ ","^4","cljs/analyzer/api.cljc","^5",117,"^6",3,"^7",117,"^8",17,"^3","ClojureScript's default analysis passes."],"^H","~$cljs.analyzer.api/default-passes","^4","cljs/analyzer/api.cljc","^8",17,"^6",1,"^5",115,"^7",117,"^19","~$cljs.core/IVector","^3","ClojureScript's default analysis passes."],"~$empty-env",["^ ","^V",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",57,"^6",7,"^7",57,"^8",16,"^W",["^X",["^Y",["^X",[[]]]]],"^3","Creates an empty analysis environment."],"^H","~$cljs.analyzer.api/empty-env","^4","cljs/analyzer/api.cljc","^8",16,"^14",["^X",[[]]],"^17",null,"^15",["^X",[null,null]],"^6",1,"^11",false,"^5",57,"^1G","^1:","^7",57,"^13",0,"^1;",true,"^W",["^X",["^Y",["^X",[[]]]]],"^3","Creates an empty analysis environment."],"~$default-warning-handler",["^ ","^V",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",74,"^6",7,"^7",74,"^8",30,"^W",["^X",["^Y",["^X",[["^1I","^O","~$extra"]]]]],"^3","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^H","~$cljs.analyzer.api/default-warning-handler","^4","cljs/analyzer/api.cljc","^8",30,"^14",["^X",[["^1I","^O","^1Z"]]],"^17",null,"^15",["^X",[null,null]],"^6",1,"^11",false,"^5",74,"^1G",["^@",[null,"^1B"]],"^7",74,"^13",3,"^1;",true,"^W",["^X",["^Y",["^X",[["^1I","^O","^1Z"]]]]],"^3","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^E",["^ ","^V",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",229,"^6",7,"^7",229,"^8",17,"^W",["^X",["^Y",["^X",[["^1<"],["^[","^1<"]]]]],"^3","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars.","^10",["^ ","^11",false,"^12",2,"^13",2,"^14",[["^1<"],["^[","^1<"]],"^W",["^X",[["^1<"],["^[","^1<"]]],"^15",["^X",[null,null]]]],"^H","~$cljs.analyzer.api/ns-interns","^4","cljs/analyzer/api.cljc","^8",17,"^10",["^ ","^11",false,"^12",2,"^13",2,"^14",[["^1<"],["^[","^1<"]],"^W",["^X",[["^1<"],["^[","^1<"]]],"^15",["^X",[null,null]]],"^14",[["^1<"],["^[","^1<"]],"^17",null,"^12",2,"^15",["^X",[null,null]],"^6",1,"^11",false,"^18",[["^ ","^12",1,"^11",false,"^19","^1:"],["^ ","^12",2,"^11",false,"^19",["^@",["^1:","^1B"]]]],"^5",229,"^7",229,"^13",2,"^1;",true,"^W",["^X",[["^1<"],["^[","^1<"]]],"^3","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars."],"^F",["^ ","^V",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",212,"^6",7,"^7",212,"^8",13,"^W",["^X",["^Y",["^X",[[],["^["]]]]],"^3","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances.","^10",["^ ","^11",false,"^12",1,"^13",1,"^14",[[],["^["]],"^W",["^X",[[],["^["]]],"^15",["^X",[null,null]]]],"^H","~$cljs.analyzer.api/all-ns","^4","cljs/analyzer/api.cljc","^8",13,"^10",["^ ","^11",false,"^12",1,"^13",1,"^14",[[],["^["]],"^W",["^X",[[],["^["]]],"^15",["^X",[null,null]]],"^14",[[],["^["]],"^17",null,"^12",1,"^15",["^X",[null,null]],"^6",1,"^11",false,"^18",[["^ ","^12",0,"^11",false,"^19","^1:"],["^ ","^12",1,"^11",false,"^19",["^@",["~$cljs.core/KeySeq","^1B"]]]],"^5",212,"^7",212,"^13",1,"^1;",true,"^W",["^X",[[],["^["]]],"^3","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances."],"~$current-file",["^ ","^V",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",41,"^6",7,"^7",41,"^8",19,"^W",["^X",["^Y",["^X",[[]]]]],"^3","Return the current file under analysis or compilation."],"^H","~$cljs.analyzer.api/current-file","^4","cljs/analyzer/api.cljc","^8",19,"^14",["^X",[[]]],"^17",null,"^15",["^X",[null,null]],"^6",1,"^11",false,"^5",41,"^1G","^1:","^7",41,"^13",0,"^1;",true,"^W",["^X",["^Y",["^X",[[]]]]],"^3","Return the current file under analysis or compilation."],"~$current-ns",["^ ","^V",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",46,"^6",7,"^7",46,"^8",17,"^W",["^X",["^Y",["^X",[[]]]]],"^3","Return the current ns under analysis or compilation."],"^H","~$cljs.analyzer.api/current-ns","^4","cljs/analyzer/api.cljc","^8",17,"^14",["^X",[[]]],"^17",null,"^15",["^X",[null,null]],"^6",1,"^11",false,"^5",46,"^1G","^1:","^7",46,"^13",0,"^1;",true,"^W",["^X",["^Y",["^X",[[]]]]],"^3","Return the current ns under analysis or compilation."],"^G",["^ ","^V",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",200,"^6",7,"^7",200,"^8",14,"^W",["^X",["^Y",["^X",[["^O","^Z"]]]]],"^3","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"^H","~$cljs.analyzer.api/resolve","^4","cljs/analyzer/api.cljc","^8",14,"^14",["^X",[["^O","^Z"]]],"^17",null,"^15",["^X",[null,null]],"^6",1,"^11",false,"^5",200,"^7",200,"^13",2,"^1;",true,"^W",["^X",["^Y",["^X",[["^O","^Z"]]]]],"^3","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"~$get-js-index",["^ ","^V",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",108,"^6",7,"^7",108,"^8",19,"^W",["^X",["^Y",["^X",[[],["^["]]]]],"^3","Return the currently computed Google Closure js dependency index from the\n  compiler state.","^10",["^ ","^11",false,"^12",1,"^13",1,"^14",[[],["^["]],"^W",["^X",[[],["^["]]],"^15",["^X",[null,null]]]],"^H","~$cljs.analyzer.api/get-js-index","^4","cljs/analyzer/api.cljc","^8",19,"^10",["^ ","^11",false,"^12",1,"^13",1,"^14",[[],["^["]],"^W",["^X",[[],["^["]]],"^15",["^X",[null,null]]],"^14",[[],["^["]],"^17",null,"^12",1,"^15",["^X",[null,null]],"^6",1,"^11",false,"^18",[["^ ","^12",0,"^11",false,"^19","^1:"],["^ ","^12",1,"^11",false,"^19",["^@",["^1:","^1B"]]]],"^5",108,"^7",108,"^13",1,"^1;",true,"^W",["^X",[[],["^["]]],"^3","Return the currently computed Google Closure js dependency index from the\n  compiler state."]],"~:require-macros",["^ ","^=","^="],"~:cljs.analyzer/constants",["^ ","^Q",["^@",["~:cljs.analyzer/namespaces","~:private","~:macros","~:js-dependency-index","^U","~:options"]],"~:order",["^2@","^2?","^2<","^2>","^U","^2="]],"~:flags",["^ ","^R",["^@",[]]],"~:js-deps",["^ "],"~:deps",["^P","^=","^L","^N"]]