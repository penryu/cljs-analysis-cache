["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs/analyzer/impl/namespaces.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",34],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$cljs.analyzer.impl.namespaces","~:reader-aliases",["^ "],"~:imports",null,"~:requires",["^ ","^<","^<","~$goog","^E"],"~:seen",["^?",[]],"~:shadow/js-access-global",["^?",["Error"]],"~:uses",null,"~:defs",["^ ","~$check-and-remove-as-alias",["^ ","~:protocol-inline",null,"^2",["^ ","^3","cljs/analyzer/impl/namespaces.cljc","^4",11,"^5",7,"^6",11,"^7",32,"~:arglists",["~#list",["~$quote",["^M",[["~$libspec"]]]]],"~:doc","Given a libspec return a map of :as-alias alias, if was present. Return the\n   libspec with :as-alias elided. If the libspec was *only* :as-alias do not\n   return it."],"^@","~$cljs.analyzer.impl.namespaces/check-and-remove-as-alias","^3","cljs/analyzer/impl/namespaces.cljc","^7",32,"~:method-params",["^M",[["^O"]]],"~:protocol-impl",null,"~:arglists-meta",["^M",[null,null]],"^5",1,"~:variadic?",false,"^4",11,"~:ret-tag",["^?",["~$clj","~$any","~$cljs.core/IMap"]],"^6",11,"~:max-fixed-arity",1,"~:fn-var",true,"^L",["^M",["^N",["^M",[["^O"]]]]],"^P","Given a libspec return a map of :as-alias alias, if was present. Return the\n   libspec with :as-alias elided. If the libspec was *only* :as-alias do not\n   return it."],"~$check-as-alias-duplicates",["^ ","^K",null,"^2",["^ ","^3","cljs/analyzer/impl/namespaces.cljc","^4",31,"^5",7,"^6",31,"^7",32,"^L",["^M",["^N",["^M",[["~$as-aliases","~$new-as-aliases"]]]]]],"^@","~$cljs.analyzer.impl.namespaces/check-as-alias-duplicates","^3","cljs/analyzer/impl/namespaces.cljc","^7",32,"^R",["^M",[["^11","^12"]]],"^S",null,"^T",["^M",[null,null]],"^5",1,"^U",false,"^4",31,"^V","~$clj-nil","^6",31,"^Z",2,"^[",true,"^L",["^M",["^N",["^M",[["^11","^12"]]]]]],"~$elide-aliases-from-libspecs",["^ ","^K",null,"^2",["^ ","^3","cljs/analyzer/impl/namespaces.cljc","^4",38,"^5",7,"^6",38,"^7",34,"^L",["^M",["^N",["^M",[["~$libspecs"],["^16","^11"]]]]],"^P","Given libspecs, elide all :as-alias. Return a map of :libspecs (filtered)\n   and :as-aliases.","~:top-fn",["^ ","^U",false,"~:fixed-arity",2,"^Z",2,"^R",[["^16"],["^16","^11"]],"^L",["^M",[["^16"],["^16","^11"]]],"^T",["^M",[null,null]]]],"^@","~$cljs.analyzer.impl.namespaces/elide-aliases-from-libspecs","^3","cljs/analyzer/impl/namespaces.cljc","^7",34,"^17",["^ ","^U",false,"^18",2,"^Z",2,"^R",[["^16"],["^16","^11"]],"^L",["^M",[["^16"],["^16","^11"]]],"^T",["^M",[null,null]]],"^R",[["^16"],["^16","^11"]],"^S",null,"^18",2,"^T",["^M",[null,null]],"^5",1,"^U",false,"~:methods",[["^ ","^18",1,"^U",false,"~:tag","^X"],["^ ","^18",2,"^U",false,"^1;",["^?",[null,"^X"]]]],"^4",38,"^6",38,"^Z",2,"^[",true,"^L",["^M",[["^16"],["^16","^11"]]],"^P","Given libspecs, elide all :as-alias. Return a map of :libspecs (filtered)\n   and :as-aliases."],"~$elide-aliases-from-ns-specs",["^ ","^K",null,"^2",["^ ","^3","cljs/analyzer/impl/namespaces.cljc","^4",55,"^5",7,"^6",55,"^7",34,"^L",["^M",["^N",["^M",[["~$ns-specs"]]]]]],"^@","~$cljs.analyzer.impl.namespaces/elide-aliases-from-ns-specs","^3","cljs/analyzer/impl/namespaces.cljc","^7",34,"^R",["^M",[["^1="]]],"^S",null,"^T",["^M",[null,null]],"^5",1,"^U",false,"^4",55,"^V",["^?",[null,"^X"]],"^6",55,"^Z",1,"^[",true,"^L",["^M",["^N",["^M",[["^1="]]]]]]],"~:require-macros",["^ ","^<","^<"],"~:cljs.analyzer/constants",["^ ","^F",["^?",["~:as-alias","~:libspec","~:refer-clojure","~:libspecs","~:as-aliases"]],"~:order",["^1B","^1A","^1E","^1D","^1C"]],"~:flags",["^ "],"~:js-deps",[],"~:deps",["^E","^<"]]