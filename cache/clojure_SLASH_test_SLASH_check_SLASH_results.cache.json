["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","clojure/test/check/results.cljc","~:line",12,"~:column",5,"~:end-line",12,"~:end-column",31,"~:author","Gary Fredericks","~:doc","A protocol and helper functions for trial results."],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core"],"~:shadow/protocol-prefixes",["~#set",["clojure$test$check$results$Result$"]],"~:use-macros",null,"~:excludes",["^@",[]],"~:name","~$clojure.test.check.results","~:imports",null,"~:requires",["^ ","^>","^>","~$goog","^G"],"~:seen",["^@",[]],"~:uses",null,"~:defs",["^ ","~$Result",["^ ","^2",["^ ","~:protocol-symbol",true,"^3","clojure/test/check/results.cljc","^7",20,"^5",14,"^4",14,"~:protocol-info",["^ ","~:methods",["^ ","~$pass?",[["~$result"]],"~$result-data",[["^P"]]]],"^6",14,"~:sigs",["^ ","~:pass?",["^ ","^C","^O","~:arglists",["~#list",[["^P"]]],"^9","A boolean indicating if the result passed."],"~:result-data",["^ ","^C","^Q","^T",["^U",[["^P"]]],"^9","A map of data about the trial."]],"~:jsdoc",["^U",["@interface"]]],"^L",true,"^C","~$clojure.test.check.results/Result","^3","clojure/test/check/results.cljc","^7",20,"^5",1,"^4",14,"^M",["^ ","^N",["^ ","^O",[["^P"]],"^Q",[["^P"]]]],"~:info",null,"^6",14,"~:tag","~$any","^R",["^ ","^S",["^ ","^C","^O","^T",["^U",[["^P"]]],"^9","A boolean indicating if the result passed."],"^V",["^ ","^C","^Q","^T",["^U",[["^P"]]],"^9","A map of data about the trial."]],"~:impls",["^@",[null,"~$default"]],"^W",["^U",["@interface"]]],"^O",["^ ","~:protocol-inline",null,"^2",["^ ","^3","clojure/test/check/results.cljc","^4",15,"^5",4,"^6",15,"^7",9,"~:protocol","^X","^9","A boolean indicating if the result passed.","^T",["^U",["~$quote",["^U",[["^P"]]]]]],"^13","^X","^C","~$clojure.test.check.results/pass?","^3","clojure/test/check/results.cljc","^7",9,"~:method-params",["^U",[["^P"]]],"~:protocol-impl",null,"~:arglists-meta",["^U",[null,null]],"^5",1,"~:variadic?",false,"^4",14,"~:ret-tag","^[","^6",15,"~:max-fixed-arity",1,"~:fn-var",true,"^T",["^U",["^14",["^U",[["^P"]]]]],"^9","A boolean indicating if the result passed."],"^Q",["^ ","^12",null,"^2",["^ ","^3","clojure/test/check/results.cljc","^4",16,"^5",4,"^6",16,"^7",15,"^13","^X","^9","A map of data about the trial.","^T",["^U",["^14",["^U",[["^P"]]]]]],"^13","^X","^C","~$clojure.test.check.results/result-data","^3","clojure/test/check/results.cljc","^7",15,"^16",["^U",[["^P"]]],"^17",null,"^18",["^U",[null,null]],"^5",1,"^19",false,"^4",14,"^1:","^[","^6",16,"^1;",1,"^1<",true,"^T",["^U",["^14",["^U",[["^P"]]]]],"^9","A map of data about the trial."]],"~:require-macros",["^ ","^>","^>"],"~:flags",["^ "],"~:js-deps",["^ "],"~:deps",["^G","^>"]]