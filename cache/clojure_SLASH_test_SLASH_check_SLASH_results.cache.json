["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","clojure/test/check/results.cljc","~:line",12,"~:column",5,"~:end-line",12,"~:end-column",31,"~:author","Gary Fredericks","~:doc","A protocol and helper functions for trial results."],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core"],"~:shadow/protocol-prefixes",["~#set",["clojure$test$check$results$Result$"]],"~:use-macros",null,"~:excludes",["^@",[]],"~:name","~$clojure.test.check.results","~:reader-aliases",["^ "],"~:imports",null,"~:requires",["^ ","^>","^>","~$goog","^H"],"~:seen",["^@",[]],"~:uses",null,"~:defs",["^ ","~$Result",["^ ","^2",["^ ","~:protocol-symbol",true,"^3","clojure/test/check/results.cljc","^7",20,"^5",14,"^4",14,"~:protocol-info",["^ ","~:methods",["^ ","~$pass?",[["~$result"]],"~$result-data",[["^Q"]]]],"^6",14,"~:sigs",["^ ","~:pass?",["^ ","^C","^P","~:arglists",["~#list",[["^Q"]]],"^9","A boolean indicating if the result passed."],"~:result-data",["^ ","^C","^R","^U",["^V",[["^Q"]]],"^9","A map of data about the trial."]],"~:jsdoc",["^V",["@interface"]]],"^M",true,"^C","~$clojure.test.check.results/Result","^3","clojure/test/check/results.cljc","^7",20,"^5",1,"^4",14,"^N",["^ ","^O",["^ ","^P",[["^Q"]],"^R",[["^Q"]]]],"~:info",null,"^6",14,"~:tag","~$any","^S",["^ ","^T",["^ ","^C","^P","^U",["^V",[["^Q"]]],"^9","A boolean indicating if the result passed."],"^W",["^ ","^C","^R","^U",["^V",[["^Q"]]],"^9","A map of data about the trial."]],"~:impls",["^@",[null,"~$default"]],"^X",["^V",["@interface"]]],"^P",["^ ","~:protocol-inline",null,"^2",["^ ","^3","clojure/test/check/results.cljc","^4",15,"^5",4,"^6",15,"^7",9,"~:protocol","^Y","^9","A boolean indicating if the result passed.","^U",["^V",["~$quote",["^V",[["^Q"]]]]]],"^14","^Y","^C","~$clojure.test.check.results/pass?","^3","clojure/test/check/results.cljc","^7",9,"~:method-params",["^V",[["^Q"]]],"~:protocol-impl",null,"~:arglists-meta",["^V",[null,null]],"^5",1,"~:variadic?",false,"^4",14,"~:ret-tag","^10","^6",15,"~:max-fixed-arity",1,"~:fn-var",true,"^U",["^V",["^15",["^V",[["^Q"]]]]],"^9","A boolean indicating if the result passed."],"^R",["^ ","^13",null,"^2",["^ ","^3","clojure/test/check/results.cljc","^4",16,"^5",4,"^6",16,"^7",15,"^14","^Y","^9","A map of data about the trial.","^U",["^V",["^15",["^V",[["^Q"]]]]]],"^14","^Y","^C","~$clojure.test.check.results/result-data","^3","clojure/test/check/results.cljc","^7",15,"^17",["^V",[["^Q"]]],"^18",null,"^19",["^V",[null,null]],"^5",1,"^1:",false,"^4",14,"^1;","^10","^6",16,"^1<",1,"^1=",true,"^U",["^V",["^15",["^V",[["^Q"]]]]],"^9","A map of data about the trial."]],"~:require-macros",["^ ","^>","^>"],"~:flags",["^ "],"~:js-deps",[],"~:deps",["^H","^>"]]