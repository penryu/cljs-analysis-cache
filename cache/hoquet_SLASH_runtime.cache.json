["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$hoquet.runtime","~:imports",null,"~:requires",["^ ","~$cstring","~$clojure.string","^<","^<"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$xml-attribute",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","^8","~:line",35,"~:column",7,"~:end-line",35,"~:end-column",20,"~:arglists",["~#list",["~$quote",["^I",[["~$name","~$value"],["^K","^L","~$escape?"]]]]],"~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",3,"~:max-fixed-arity",3,"~:method-params",["^I",[["^K","^L"],["^K","^L","^M"]]],"^H",["^I",[["^K","^L"],["^K","^L","^M"]]],"~:arglists-meta",["^I",[null,null]]]],"^7","~$hoquet.runtime/xml-attribute","^C","hoquet/runtime.cljc","^G",20,"^N",["^ ","^O",false,"^P",3,"^Q",3,"^R",["^I",[["^K","^L"],["^K","^L","^M"]]],"^H",["^I",[["^K","^L"],["^K","^L","^M"]]],"^S",["^I",[null,null]]],"^R",["^I",[["^K","^L"],["^K","^L","^M"]]],"~:protocol-impl",null,"^P",3,"^S",["^I",[null,null]],"^E",1,"^O",false,"~:methods",[["^ ","^P",2,"^O",false,"~:tag","~$any"],["^ ","^P",3,"^O",false,"^W","~$string"]],"^D",35,"^F",35,"^Q",3,"~:fn-var",true,"^H",["^I",[["^K","^L"],["^K","^L","^M"]]]],"~$re-tag",["^ ","^B",["^ ","^C","^8","^D",5,"^E",3,"^F",5,"^G",9,"~:doc","Regular expression that parses a CSS-style id and class from a tag name.","~:private",true],"^11",true,"^7","~$hoquet.runtime/re-tag","^C","hoquet/runtime.cljc","^G",9,"^E",1,"^D",4,"^F",5,"^W","^X","^10","Regular expression that parses a CSS-style id and class from a tag name."],"~$render-attribute",["^ ","^A",null,"^B",["^ ","^C","^8","^D",42,"^E",7,"^F",42,"^G",23,"^H",["^I",["^J",["^I",[[["^K","^L"]]]]]]],"^7","~$hoquet.runtime/render-attribute","^C","hoquet/runtime.cljc","^G",23,"^R",["^I",[["~$p__25"]]],"^U",null,"^S",["^I",[null,null]],"^E",1,"^O",false,"^D",42,"~:ret-tag",["^6",["^X","^Y"]],"^F",42,"^Q",1,"^Z",true,"^H",["^I",["^J",["^I",[[["^K","^L"]]]]]]],"~$normalize-element",["^ ","^A",null,"^B",["^ ","^C","^8","^D",52,"^E",7,"^F",52,"^G",24,"^H",["^I",["^J",["^I",[[["~$tag","~$&","~$content"]]]]]],"^10","Ensure a tag vector is of the form [tag-name attrs content]."],"^7","~$hoquet.runtime/normalize-element","^C","hoquet/runtime.cljc","^G",24,"^R",["^I",[["~$p__29"]]],"^U",null,"^S",["^I",[null,null]],"^E",1,"^O",false,"^D",52,"^16","~$cljs.core/IVector","^F",52,"^Q",1,"^Z",true,"^H",["^I",["^J",["^I",[[["^18","~$&","^19"]]]]]],"^10","Ensure a tag vector is of the form [tag-name attrs content]."],"~$container-tags",["^ ","^B",["^ ","^C","^8","^D",14,"^E",3,"^F",14,"^G",17,"^10","A list of tags that need an explicit ending tag when rendered."],"^7","~$hoquet.runtime/container-tags","^C","hoquet/runtime.cljc","^G",17,"^E",1,"^D",13,"^F",14,"^W","~$cljs.core/ISet","^10","A list of tags that need an explicit ending tag when rendered."],"~$render-attr-map",["^ ","^A",null,"^B",["^ ","^C","^8","^D",48,"^E",7,"^F",48,"^G",22,"^H",["^I",["^J",["^I",[["~$attrs"]]]]]],"^7","~$hoquet.runtime/render-attr-map","^C","hoquet/runtime.cljc","^G",22,"^R",["^I",[["^1A"]]],"^U",null,"^S",["^I",[null,null]],"^E",1,"^O",false,"^D",48,"^16","^X","^F",48,"^Q",1,"^Z",true,"^H",["^I",["^J",["^I",[["^1A"]]]]]],"~$as-str",["^ ","^A",null,"^B",["^ ","^C","^8","^D",19,"^E",7,"^F",19,"^G",13,"^H",["^I",["^J",["^I",[["~$x"]]]]]],"^7","~$hoquet.runtime/as-str","^C","hoquet/runtime.cljc","^G",13,"^R",["^I",[["~$x"]]],"^U",null,"^S",["^I",[null,null]],"^E",1,"^O",false,"^D",19,"^16","^Y","^F",19,"^Q",1,"^Z",true,"^H",["^I",["^J",["^I",[["~$x"]]]]]],"~$render-element",["^ ","^A",null,"^B",["^ ","^C","^8","^D",67,"^E",7,"^F",67,"^G",21,"^H",["^I",["^J",["^I",[["~$element"]]]]],"^10","Render a tag vector as a HTML element."],"^7","~$hoquet.runtime/render-element","^C","hoquet/runtime.cljc","^G",21,"^R",["^I",[["^1F"]]],"^U",null,"^S",["^I",[null,null]],"^E",1,"^O",false,"^D",67,"^16","^Y","^F",67,"^Q",1,"^Z",true,"^H",["^I",["^J",["^I",[["^1F"]]]]],"^10","Render a tag vector as a HTML element."],"~$end-tag",["^ ","^A",null,"^B",["^ ","^C","^8","^D",32,"^E",7,"^F",32,"^G",14,"^H",["^I",["^J",["^I",[[]]]]]],"^7","~$hoquet.runtime/end-tag","^C","hoquet/runtime.cljc","^G",14,"^R",["^I",[[]]],"^U",null,"^S",["^I",[null,null]],"^E",1,"^O",false,"^D",32,"^16","^Y","^F",32,"^Q",0,"^Z",true,"^H",["^I",["^J",["^I",[[]]]]]],"~$render-html",["^ ","^A",null,"^B",["^ ","^C","^8","^D",77,"^E",7,"^F",77,"^G",18,"^H",["^I",["^J",["^I",[["~$x"]]]]],"^10","Turn a Clojure data type into a string of HTML.\n   In Hiccup, sequences are expanded out into the body. This is particularly useful for macros like `for`."],"^7","~$hoquet.runtime/render-html","^C","hoquet/runtime.cljc","^G",18,"^R",["^I",[["~$x"]]],"^U",null,"^S",["^I",[null,null]],"^E",1,"^O",false,"^D",77,"^16",["^6",["^Y","^X"]],"^F",77,"^Q",1,"^Z",true,"^H",["^I",["^J",["^I",[["~$x"]]]]],"^10","Turn a Clojure data type into a string of HTML.\n   In Hiccup, sequences are expanded out into the body. This is particularly useful for macros like `for`."],"~$character-escapes",["^ ","^B",["^ ","^C","^8","^D",8,"^E",3,"^F",8,"^G",20,"^10","Characters to replace when escaping HTML","^11",true],"^11",true,"^7","~$hoquet.runtime/character-escapes","^C","hoquet/runtime.cljc","^G",20,"^E",1,"^D",7,"^F",8,"^W","~$cljs.core/IMap","^10","Characters to replace when escaping HTML"],"~$h",["^ ","^7","~$hoquet.runtime/h","^C","hoquet/runtime.cljc","^D",30,"^E",1,"^F",30,"^G",7,"^B",["^ ","^C","^8","^D",30,"^E",6,"^F",30,"^G",7]],"~$escape-html",["^ ","^A",null,"^B",["^ ","^C","^8","^D",24,"^E",7,"^F",24,"^G",18,"^H",["^I",["^J",["^I",[["~$text"]]]]],"^10","Change special characters into HTML character entities."],"^7","~$hoquet.runtime/escape-html","^C","hoquet/runtime.cljc","^G",18,"^R",["^I",[["^1Q"]]],"^U",null,"^S",["^I",[null,null]],"^E",1,"^O",false,"^D",24,"^16","^Y","^F",24,"^Q",1,"^Z",true,"^H",["^I",["^J",["^I",[["^1Q"]]]]],"^10","Change special characters into HTML character entities."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ "],"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:else","~:id","~:class"]],"~:order",["^1W","^1X","^1Y"]],"^10",null]