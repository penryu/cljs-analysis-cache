["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs/tools/reader/impl/inspect.cljs","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",35],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$cljs.tools.reader.impl.inspect","~:reader-aliases",["^ "],"~:imports",null,"~:requires",["^ ","^<","^<","~$goog","^E"],"~:seen",["^?",[]],"~:shadow/js-access-global",["^?",["Error"]],"~:uses",null,"~:defs",["^ ","~$inspect*",["^ ","^@","~$cljs.tools.reader.impl.inspect/inspect*","^3","cljs/tools/reader/impl/inspect.cljs","^4",37,"^5",1,"^6",37,"^7",19,"^2",["^ ","^3","cljs/tools/reader/impl/inspect.cljs","^4",37,"^5",11,"^6",37,"^7",19],"~:tag","~$cljs.core/MultiFn"],"~$inspect*-col",["^ ","~:protocol-inline",null,"^2",["^ ","^3","cljs/tools/reader/impl/inspect.cljs","^4",13,"^5",8,"^6",13,"^7",20,"~:private",true,"~:arglists",["~#list",["~$quote",["^R",[["~$truncate","~$col","~$start","~$end"]]]]]],"^P",true,"^@","~$cljs.tools.reader.impl.inspect/inspect*-col","^3","cljs/tools/reader/impl/inspect.cljs","^7",20,"~:method-params",["^R",[["^T","^U","^V","^W"]]],"~:protocol-impl",null,"~:arglists-meta",["^R",[null,null]],"^5",1,"~:variadic?",false,"^4",13,"~:ret-tag","~$string","^6",13,"~:max-fixed-arity",4,"~:fn-var",true,"^Q",["^R",["^S",["^R",[["^T","^U","^V","^W"]]]]]],"~$dispatch-inspect",["^ ","^O",null,"^2",["^ ","^3","cljs/tools/reader/impl/inspect.cljs","^4",21,"^5",8,"^6",21,"^7",24,"^P",true,"^Q",["^R",["^S",["^R",[["~$_","~$x"]]]]]],"^P",true,"^@","~$cljs.tools.reader.impl.inspect/dispatch-inspect","^3","cljs/tools/reader/impl/inspect.cljs","^7",24,"^Y",["^R",[["~$_","~$x"]]],"^Z",null,"^[",["^R",[null,null]],"^5",1,"^10",false,"^4",21,"^11",["^?",["~$any","~$cljs.core/Keyword","~$clj-nil"]],"^6",21,"^13",2,"^14",true,"^Q",["^R",["^S",["^R",[["~$_","~$x"]]]]]],"~$inspect",["^ ","^O",null,"^2",["^ ","^3","cljs/tools/reader/impl/inspect.cljs","^4",83,"^5",7,"^6",83,"^7",14,"^Q",["^R",["^S",["^R",[["~$x"],["^T","~$x"]]]]],"~:doc","Return a string description of the value supplied.\n   May be the a string version of the value itself (e.g. \"true\")\n   or it may be a description (e.g. \"an instance of Foo\").\n   If truncate is true then return a very terse version of\n   the inspection.","~:top-fn",["^ ","^10",false,"~:fixed-arity",2,"^13",2,"^Y",[["~$x"],["^T","~$x"]],"^Q",["^R",[["~$x"],["^T","~$x"]]],"^[",["^R",[null,null]]]],"^@","~$cljs.tools.reader.impl.inspect/inspect","^3","cljs/tools/reader/impl/inspect.cljs","^7",14,"^1<",["^ ","^10",false,"^1=",2,"^13",2,"^Y",[["~$x"],["^T","~$x"]],"^Q",["^R",[["~$x"],["^T","~$x"]]],"^[",["^R",[null,null]]],"^Y",[["~$x"],["^T","~$x"]],"^Z",null,"^1=",2,"^[",["^R",[null,null]],"^5",1,"^10",false,"~:methods",[["^ ","^1=",1,"^10",false,"^L","^17"],["^ ","^1=",2,"^10",false,"^L","^17"]],"^4",83,"^6",83,"^13",2,"^14",true,"^Q",["^R",[["~$x"],["^T","~$x"]]],"^1;","Return a string description of the value supplied.\n   May be the a string version of the value itself (e.g. \"true\")\n   or it may be a description (e.g. \"an instance of Foo\").\n   If truncate is true then return a very terse version of\n   the inspection."]],"~:require-macros",["^ ","^<","^<"],"~:cljs.analyzer/constants",["^ ","^F",["^?",["~:default","~:string","~:vector","~:strable","~:list","~:nil","~:set","~:hierarchy","~:map"]],"~:order",["^1G","^1C","^1E","^1D","^1F","^1J","^1H","^1B","^1I"]],"~:flags",["^ "],"~:js-deps",[],"~:deps",["^E","^<"]]