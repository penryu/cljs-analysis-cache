["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$cljs.core.specs.alpha$macros","~:imports",null,"~:requires",["^ ","~$s","~$cljs.spec.alpha","^9","^9","~$core","~$cljs.core$macros","^;","^;","~$clojure.spec.alpha","^9"],"~:cljs.spec/speced-vars",["~$cljs.core$macros/require","~$cljs.core$macros/ns-special-form","~$cljs.core$macros/defn-","~$cljs.core$macros/if-let","~$cljs.core$macros/require-macros","~$cljs.core$macros/import","~$cljs.core$macros/when-let","~$cljs.core$macros/let","~$cljs.core$macros/fn","~$cljs.core$macros/use-macros","~$cljs.core$macros/defn","~$cljs.core$macros/use"],"~:uses",null,"~:defs",["^ ","~$even-number-of-forms?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","~$cljs.core.specs.alpha","~:line",58,"~:column",7,"~:end-line",58,"~:end-column",28,"~:arglists",["~#list",["~$quote",["^V",[["~$forms"]]]]],"~:doc","Returns true if there are an even number of forms in a binding vector"],"^5","~$cljs.core.specs.alpha$macros/even-number-of-forms?","^O","cljs/core/specs/alpha.cljc","^T",28,"~:method-params",["^V",[["^X"]]],"~:protocol-impl",null,"~:arglists-meta",["^V",[null,null]],"^R",1,"~:variadic?",false,"^Q",58,"~:ret-tag","~$boolean","^S",58,"~:max-fixed-arity",1,"~:fn-var",true,"^U",["^V",["^W",["^V",[["^X"]]]]],"^Y","Returns true if there are an even number of forms in a binding vector"],"~$quoted",["^ ","^M",null,"^N",["^ ","^O","^P","^Q",209,"^R",8,"^S",209,"^T",14,"~:private",true,"^U",["^V",["^W",["^V",[["~$spec"]]]]],"^Y","Returns a spec that accepts a (quote ...) form of the spec"],"^18",true,"^5","~$cljs.core.specs.alpha$macros/quoted","^O","cljs/core/specs/alpha.cljc","^T",14,"^[",["^V",[["^19"]]],"^10",null,"^11",["^V",[null,null]],"^R",1,"^12",false,"^Q",209,"^13","~$any","^S",209,"^15",1,"^16",true,"^U",["^V",["^W",["^V",[["^19"]]]]],"^Y","Returns a spec that accepts a (quote ...) form of the spec"]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^<","^9","~$s","^9","^9","^9"],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~$s/tuple","~:args","~$cljs.spec.alpha/*","~$&","~:req-un","~:opt-un","~$cljs.spec.alpha/+","~:cljs.core.specs.alpha/lib","~:package","~:ret","~:gfn","^>","~:exclude","~$cljs.core/keyword?","~:pred-exprs","~$mspec__20__auto__","~:map-destructure","~:into","~:keys-pred","~:cljs.core.specs.alpha/use-macros-libspec","~:cljs.core.specs.alpha/syms","~:cljs.core.specs.alpha/seq-binding-form","~$any?","~:cljs.core.specs.alpha/macros-libspec","~$cljs.core/simple-symbol?","~$cljs.spec.alpha/alt","~$cljs.core/vector?","~:only","^?","^N","~:attr-map","^@","~:opt-keys","~$s/or","~$simple-symbol?","~:else","~:cljs.core.specs.alpha/refer-macros","~:var-params","~:cljs.core.specs.alpha/ns-form","~$cljs.spec.alpha/and","^2","~$cljs.spec.alpha/coll-of","~$cljs.spec.alpha/cat","~$cljs.core/->","~:cljs.spec.alpha/kind-form","~:local-symbol","~:use","~:fn-tail","~$cljs.spec.alpha/every","~:bindings","~:cljs.core.specs.alpha/defn-args","~$cljs.core/not=","~:as","~:special-binding","~$cljs.core/string?","~$p1__2#","~:flag","~:req-specs","~$cljs.spec.alpha/or","~:cljs.core.specs.alpha/map-bindings","~:or","^A","~$cljs.core/qualified-keyword?","~:cljs.core.specs.alpha/param-list","~:require","~:params","~$cljs.spec.alpha/fspec","~:fn-name","~:cljs.core.specs.alpha/binding-form","~:cljs.spec.alpha/v","~:verbose","~:libspec","~:cljs.core.specs.alpha/refer","~$cljs.spec.alpha/tuple","~:rename","~:ns-name","~$cljs.core/contains?","~$cljs.core/map?","~$cljs.core.specs.alpha/even-number-of-forms?","~:cljs.spec.alpha/cpred","~:init-expr","~:syms","~:cljs.core.specs.alpha/local-name","~:cljs.core.specs.alpha/filters","~$%","~:cljs.spec.alpha/kvs->map","~:cljs.core.specs.alpha/ns-keys","~:sym","^B","~:lib+opts","~:cljs.core.specs.alpha/ns-refer-clojure","~$cljs.core.specs.alpha/quoted","~$cljs.spec.alpha/keys","~:package-list","~$cljs.spec.alpha/spec","~:cljs.core.specs.alpha/ns-import","~:spec","~:include-macros","~$cljs.spec.alpha/merge","~:map-binding","~:req","^C","~:cljs.core.specs.alpha/map-binding-form","~:keys","~:ns-clauses","~:rest-forms","~:str","~:cljs.core.specs.alpha/bindings","~$fn*","~:quote","~:qualified-keys-or-syms","~:prepost+body","~:cljs.core.specs.alpha/strs","~:cljs.core.specs.alpha/as","~$ident?","~:class","~:cljs.core.specs.alpha/or","~:cljs.core.specs.alpha/only","~:kind","~$cljs.spec.alpha/map-of","~:req-keys","~:cljs.spec.alpha/k","~:lib","~$cljs.core/fn","~:cljs.core.specs.alpha/quoted-import-list","~:opt-specs","~:then","~:cljs.core.specs.alpha/ns-require-macros","~:reload","~:prepost","^D","~:pred-forms","~:refer-clojure","~:cljs.core.specs.alpha/rename","~:reload-all","^1=","^19","~:libs","~:options","~:form","~:cljs.core.specs.alpha/params+body","~:cljs.spec.alpha/kfn","~:arity-n","~:seq-destructure","^W","~$cljs.core/symbol?","~:as-form","~:cljs.core.specs.alpha/import-list","~:ampersand","^E","~:import","^F","~:cljs.core.specs.alpha/map-special-binding","~:body","~$cljs.spec.alpha/keys*","~:cljs.core.specs.alpha/keys","~:bodies","~:clause","~:cljs.core.specs.alpha/include-macros","~:cljs.core.specs.alpha/package-list","~:as-sym","~:docstring","~:cljs.core.specs.alpha/ns-clauses","~:cljs.core.specs.alpha/use-libspec","~$p1__1#","~:cljs.core.specs.alpha/exclude","~:cljs.spec.alpha/conform-all","~:cljs.core.specs.alpha/ns-use","~:strs","~$cljs.core/name","~:cljs.core.specs.alpha/libspec","~:cljs.core.specs.alpha/binding","~:cljs.core.specs.alpha/ns-use-macros","~:forms","^G","~:classes","~$cljs.core/any?","~:arity-1","~:refer-filters","~:cljs.core.specs.alpha/map-binding","~:cljs.core.specs.alpha/ns-require","^H","~:var-form","~:refer","~$symbol?","~:cljs.spec.alpha/describe","~:opt","~$cljs.core/ident?","~:refer-macros","^I","~$cljs.spec.alpha/?"]],"~:order",["^33","^26","^1V","^3J","^4P","^2A","^W","~$&","^3Y","~$%","^2Q","^2H","^2;","^4>","^1S","^1N","^3D","^1X","^28","^4Y","^1B","^3G","^5;","^4B","^4:","^4@","^2B","^4L","^4G","^27","^59","^3T","^3P","^2:","^30","^4R","^57","^1R","^4?","^56","^3N","^21","^3R","^3U","^4[","^2V","^1T","^1O","^4<","^2Z","^3O","^4D","^3;","^1D","^1C","^1I","^1L","^1P","^1[","^2G","^3C","^3V","^3[","^44","^58","^2J","^3E","^32","^4T","^52","^36","^2K","^2E","^29","^4U","^2I","^2>","^3B","^3L","^2C","^20","^1@","^3A","^4W","^31","^3I","^2[","^E","^2O","^1A","^2?","^4E","^A","^40","^22","^D","^2L","^2N","^24","^54","^4;","^1W","^3M","^43","^1E","^2@","^2P","^4M","^2D","^N","^2=","^50","^4=","^4H","^3=","^1Z","^H","^1H","^@","^F","^4Q","^3S","^46","^34","^4F","^1J","^1Y","^2W","^3W","^1K","^2R","^35","^1M","^39","^4I","^45","^51","^2U","^23","^4J","^1F","^37","^3H","^4V","^3X","^38","^49","^55","^5:","^3@","^1U","^53","^2M","^2T","^2F","^42","^47","^2S","^41","^1=","^4K","^1G","^4Z","^4A","^3Q","^3<","^3>","^4C","^4O","^2Y","^4S","^2<","^48","^1Q","^4X","^2","^4N","^25","^2X","^3F","^?","^3K","^3?","^19","^3Z","^3:","^C","^>","^B","^I","^G"]],"^Y",null]