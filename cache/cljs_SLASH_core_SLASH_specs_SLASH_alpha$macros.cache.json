["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$cljs.core.specs.alpha$macros","~:imports",null,"~:requires",["^ ","~$s","~$cljs.spec.alpha","^9","^9","~$core","~$cljs.core$macros","^;","^;","~$clojure.spec.alpha","^9"],"~:cljs.spec/speced-vars",["~$cljs.core$macros/require","~$cljs.core$macros/ns-special-form","~$cljs.core$macros/defn-","~$cljs.core$macros/if-let","~$cljs.core$macros/require-macros","~$cljs.core$macros/import","~$cljs.core$macros/when-let","~$cljs.core$macros/let","~$cljs.core$macros/fn","~$cljs.core$macros/use-macros","~$cljs.core$macros/defn","~$cljs.core$macros/use"],"~:uses",null,"~:defs",["^ ","~$quoted",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","~$cljs.core.specs.alpha","~:line",204,"~:column",8,"~:end-line",204,"~:end-column",14,"~:private",true,"~:arglists",["~#list",["~$quote",["^W",[["~$spec"]]]]],"~:doc","Returns a spec that accepts a (quote ...) form of the spec"],"^U",true,"^5","~$cljs.core.specs.alpha$macros/quoted","~:variadic",false,"^O","cljs/core/specs/alpha.cljc","^T",14,"~:method-params",["^W",[["^Y"]]],"~:protocol-impl",null,"~:arglists-meta",["^W",[null,null]],"^R",1,"^Q",204,"^S",204,"~:max-fixed-arity",1,"~:fn-var",true,"^V",["^W",["^X",["^W",[["^Y"]]]]],"^Z","Returns a spec that accepts a (quote ...) form of the spec"]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^<","^9","~$s","^9","^9","^9"],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~$s/tuple","~:args","~$cljs.spec.alpha/*","~$&","~:req-un","~:opt-un","~$cljs.spec.alpha/+","~:cljs.core.specs.alpha/lib","~:package","~:ret","~:gfn","^>","~:exclude","~$cljs.core/keyword?","~:pred-exprs","~$mspec__17__auto__","~:into","~:keys-pred","~:cljs.core.specs.alpha/use-macros-libspec","~:cljs.core.specs.alpha/syms","~:cljs.core.specs.alpha/seq-binding-form","~$any?","~:cljs.core.specs.alpha/macros-libspec","~$cljs.core/simple-symbol?","~$cljs.spec.alpha/alt","~$cljs.core/vector?","~:only","^?","^N","~:attr-map","^@","~:opt-keys","~$s/or","~$simple-symbol?","~:else","~:cljs.core.specs.alpha/refer-macros","~:cljs.core.specs.alpha/ns-form","~$cljs.spec.alpha/and","^2","~$cljs.spec.alpha/coll-of","~$cljs.spec.alpha/cat","~$cljs.core/->","~:filters","~:cljs.spec.alpha/kind-form","~:use","~$cljs.spec.alpha/every","~:bindings","~:cljs.core.specs.alpha/defn-args","^5","~$cljs.core/not=","~:as","~$cljs.core/string?","~$p1__2#","~:flag","~:req-specs","~$cljs.spec.alpha/or","~:cljs.core.specs.alpha/map-bindings","~:or","~:msb","^A","~$cljs.core/qualified-keyword?","~:varargs","~:cljs.core.specs.alpha/args+body","~:require","~$cljs.spec.alpha/fspec","~:amp","~:cljs.core.specs.alpha/binding-form","~:cljs.core.specs.alpha/arg-list","~:cljs.spec.alpha/v","~:verbose","~:libspec","~:cljs.core.specs.alpha/refer","~$cljs.spec.alpha/tuple","~:rename","~$cljs.core/contains?","~$cljs.core/map?","~:mb","~:cljs.spec.alpha/cpred","~:init-expr","~:syms","~:cljs.core.specs.alpha/local-name","~:cljs.core.specs.alpha/filters","~$%","~:cljs.spec.alpha/kvs->map","~:cljs.core.specs.alpha/ns-keys","~:sym","^B","~:lib+opts","~:cljs.core.specs.alpha/ns-refer-clojure","~$cljs.core.specs.alpha/quoted","~$cljs.spec.alpha/keys","~:package-list","~$cljs.spec.alpha/spec","~:cljs.core.specs.alpha/ns-import","~:spec","~:include-macros","~$cljs.spec.alpha/merge","~:req","~:binding","^C","~:cljs.core.specs.alpha/map-binding-form","~:keys","~:str","~:cljs.core.specs.alpha/bindings","~$fn*","~:quote","~:prepost+body","~:cljs.core.specs.alpha/strs","~:cljs.core.specs.alpha/as","~$ident?","~:class","~:cljs.core.specs.alpha/or","~:cljs.core.specs.alpha/only","~:kind","~$cljs.spec.alpha/map-of","~:req-keys","~:cljs.spec.alpha/k","~:lib","~$cljs.core/fn","~:cljs.core.specs.alpha/quoted-import-list","~:opt-specs","~:then","~:cljs.core.specs.alpha/ns-require-macros","~:bs","~:reload","~:prepost","^D","~:pred-forms","~:refer-clojure","~:cljs.core.specs.alpha/rename","~:reload-all","^17","^Y","~:libs","~:options","~:clauses","~:form","~:cljs.spec.alpha/kfn","~:seq","~:arity-n","^X","~$cljs.core/symbol?","~:cljs.core.specs.alpha/import-list","^E","~:elems","~:import","^F","~:cljs.core.specs.alpha/map-special-binding","~:body","~$cljs.spec.alpha/keys*","~:cljs.core.specs.alpha/keys","~:nsk","~:bodies","~:clause","~:cljs.core.specs.alpha/include-macros","~:cljs.core.specs.alpha/package-list","~:docstring","~:cljs.core.specs.alpha/ns-clauses","~:cljs.core.specs.alpha/use-libspec","~$p1__1#","~:cljs.core.specs.alpha/exclude","~:map","~:cljs.spec.alpha/conform-all","~:cljs.core.specs.alpha/ns-use","~:strs","~$cljs.core/name","~:rest","~:cljs.core.specs.alpha/libspec","~:cljs.core.specs.alpha/binding","~:cljs.core.specs.alpha/ns-use-macros","^G","~:classes","~$cljs.core/any?","~:arity-1","~:cljs.core.specs.alpha/map-binding","~:cljs.core.specs.alpha/ns-require","^H","~:refer","~$symbol?","~:cljs.spec.alpha/describe","~:opt","~$cljs.core/ident?","~:refer-macros","^I","~$cljs.spec.alpha/?","~:attr"]],"~:order",["^2V","^1Z","^1O","^3?","^4D","^28","^X","~$&","^3M","~null]