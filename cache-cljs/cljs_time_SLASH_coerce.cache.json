["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "],"~$Date",["^ ","~$prototype",["^ ","~$cljs-time$coerce$ICoerce$",["^ "],"~$cljs-time$coerce$ICoerce$to-date-time$arity$1",["^ "]]]],"~:use-macros",["^ "],"~:excludes",["~#set",["~$extend","~$second"]],"~:name","~$cljs-time.coerce","~:imports",["^ ","~$UtcDateTime","~$goog.date.UtcDateTime"],"~:requires",["^ ","~$cljs-time.core","^C","~$time-fmt","~$cljs-time.format","^E","^E","^@","^A"],"~:uses",["^ ","~$from-default-time-zone","^C","~$minute","^C","~$hour","^C","~$day","^C","~$date-time","^C","^<","^C","~$month","^C","~$year","^C","~$to-utc-time-zone","^C","~$milli","^C"],"~:defs",["^ ","~$to-local-date",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","^>","~:line",71,"~:column",7,"~:end-line",71,"~:end-column",20,"~:arglists",["~#list",["~$quote",["^Z",[["~$obj"]]]]],"~:doc","Convert `obj` to a goog.date.Date instance"],"^=","~$cljs-time.coerce/to-local-date","~:variadic",false,"^T","cljs_time/coerce.cljs","^X",20,"~:method-params",["^Z",[["^10"]]],"~:protocol-impl",null,"~:arglists-meta",["^Z",[null,null]],"^V",1,"^U",71,"^W",71,"~:max-fixed-arity",1,"~:fn-var",true,"^Y",["^Z",["^[",["^Z",[["^10"]]]]],"^11","Convert `obj` to a goog.date.Date instance"],"~$to-long",["^ ","^R",null,"^S",["^ ","^T","^>","^U",47,"^V",7,"^W",47,"^X",14,"^Y",["^Z",["^[",["^Z",[["^10"]]]]],"^11","Convert `obj` to the number of milliseconds after the Unix epoch."],"^=","~$cljs-time.coerce/to-long","^13",false,"^T","cljs_time/coerce.cljs","^X",14,"^14",["^Z",[["^10"]]],"^15",null,"^16",["^Z",[null,null]],"^V",1,"^U",47,"^W",47,"^17",1,"^18",true,"^Y",["^Z",["^[",["^Z",[["^10"]]]]],"^11","Convert `obj` to the number of milliseconds after the Unix epoch."],"~$from-date",["^ ","^R",null,"^S",["^ ","^T","^>","^U",41,"^V",7,"^W",41,"^X",16,"^Y",["^Z",["^[",["^Z",[["~$date"]]]]],"^11","Returns a DateTime instance in the UTC time zone corresponding to the given\n  js Date object."],"^=","~$cljs-time.coerce/from-date","^13",false,"^T","cljs_time/coerce.cljs","^X",16,"^14",["^Z",[["^1<"]]],"^15",null,"^16",["^Z",[null,null]],"^V",1,"^U",41,"^W",41,"^17",1,"^18",true,"^Y",["^Z",["^[",["^Z",[["^1<"]]]]],"^11","Returns a DateTime instance in the UTC time zone corresponding to the given\n  js Date object."],"~$to-local-date-time",["^ ","^R",null,"^S",["^ ","^T","^>","^U",80,"^V",7,"^W",80,"^X",25,"^Y",["^Z",["^[",["^Z",[["^10"]]]]],"^11","Convert `obj` to a goog.date.DateTime instance"],"^=","~$cljs-time.coerce/to-local-date-time","^13",false,"^T","cljs_time/coerce.cljs","^X",25,"^14",["^Z",[["^10"]]],"^15",null,"^16",["^Z",[null,null]],"^V",1,"^U",80,"^W",80,"^17",1,"^18",true,"^Y",["^Z",["^[",["^Z",[["^10"]]]]],"^11","Convert `obj` to a goog.date.DateTime instance"],"~$from-string",["^ ","^R",null,"^S",["^ ","^T","^>","^U",31,"^V",7,"^W",31,"^X",18,"^Y",["^Z",["^[",["^Z",[["~$s"]]]]],"^11","Returns DateTime instance from string using formatters in cljs-time.format,\n  returning first which parses"],"^=","~$cljs-time.coerce/from-string","^13",false,"^T","cljs_time/coerce.cljs","^X",18,"^14",["^Z",[["~$s"]]],"^15",null,"^16",["^Z",[null,null]],"^V",1,"^U",31,"^W",31,"^17",1,"^18",true,"^Y",["^Z",["^[",["^Z",[["~$s"]]]]],"^11","Returns DateTime instance from string using formatters in cljs-time.format,\n  returning first which parses"],"~$to-string",["^ ","^R",null,"^S",["^ ","^T","^>","^U",63,"^V",7,"^W",63,"^X",16,"^Y",["^Z",["^[",["^Z",[["^10"]]]]],"^11","Returns a string representation of obj in UTC time-zone\n  using \"yyyy-MM-dd'T'HH:mm:ss.SSSZZ\" date-time representation."],"^=","~$cljs-time.coerce/to-string","^13",false,"^T","cljs_time/coerce.cljs","^X",16,"^14",["^Z",[["^10"]]],"^15",null,"^16",["^Z",[null,null]],"^V",1,"^U",63,"^W",63,"^17",1,"^18",true,"^Y",["^Z",["^[",["^Z",[["^10"]]]]],"^11","Returns a string representation of obj in UTC time-zone\n  using \"yyyy-MM-dd'T'HH:mm:ss.SSSZZ\" date-time representation."],"~$to-date",["^ ","^R",null,"^S",["^ ","^T","^>","^U",58,"^V",7,"^W",58,"^X",14,"^Y",["^Z",["^[",["^Z",[["^10"]]]]],"^11","Convert `obj` to a JavaScript Date instance."],"^=","~$cljs-time.coerce/to-date","^13",false,"^T","cljs_time/coerce.cljs","^X",14,"^14",["^Z",[["^10"]]],"^15",null,"^16",["^Z",[null,null]],"^V",1,"^U",58,"^W",58,"^17",1,"^18",true,"^Y",["^Z",["^[",["^Z",[["^10"]]]]],"^11","Convert `obj` to a JavaScript Date instance."],"~$from-long",["^ ","^R",null,"^S",["^ ","^T","^>","^U",25,"^V",7,"^W",25,"^X",16,"^Y",["^Z",["^[",["^Z",[["~$millis"]]]]],"^11","Returns a DateTime instance in the UTC time zone corresponding to the given\n  number of milliseconds after the Unix epoch."],"^=","~$cljs-time.coerce/from-long","^13",false,"^T","cljs_time/coerce.cljs","^X",16,"^14",["^Z",[["^1G"]]],"^15",null,"^16",["^Z",[null,null]],"^V",1,"^U",25,"^W",25,"^17",1,"^18",true,"^Y",["^Z",["^[",["^Z",[["^1G"]]]]],"^11","Returns a DateTime instance in the UTC time zone corresponding to the given\n  number of milliseconds after the Unix epoch."],"~$ICoerce",["^ ","^S",["^ ","~:protocol-symbol",true,"^T","^>","^X",21,"^V",14,"^U",22,"~:protocol-info",["^ ","~:methods",["^ ","~$to-date-time",[["^10"]]]],"^W",22,"^11",null,"~:jsdoc",["^Z",["@interface"]]],"^1J",true,"^=","~$cljs-time.coerce/ICoerce","^T","cljs_time/coerce.cljs","^X",21,"^V",1,"^U",22,"^1K",["^ ","^1L",["^ ","^1M",[["^10"]]]],"~:info",null,"^W",22,"~:tag","~$any","~:impls",["^:",[null,"~$string","~$js/Date","~$goog/date.Date","~$goog/date.DateTime","~$goog/date.UtcDateTime","~$number"]],"^11",null,"^1N",["^Z",["@interface"]]],"^1M",["^ ","^R",null,"^S",["^ ","^T","^>","^U",23,"^V",4,"^W",23,"^X",16,"~:protocol","^1O","^11","Convert `obj` to a goog.date.DateTime instance.","^Y",["^Z",["^[",["^Z",[["^10"]]]]]],"^1Z","^1O","^=","~$cljs-time.coerce/to-date-time","^13",false,"^T","cljs_time/coerce.cljs","^X",16,"^14",["^Z",[["^10"]]],"^15",null,"^16",["^Z",[null,null]],"^V",1,"^U",22,"^W",23,"^17",1,"^18",true,"^Y",["^Z",["^[",["^Z",[["^10"]]]]],"^11","Convert `obj` to a goog.date.DateTime instance."],"~$to-epoch",["^ ","^R",null,"^S",["^ ","^T","^>","^U",52,"^V",7,"^W",52,"^X",15,"^Y",["^Z",["^[",["^Z",[["^10"]]]]],"^11","Convert `obj` to Unix epoch."],"^=","~$cljs-time.coerce/to-epoch","^13",false,"^T","cljs_time/coerce.cljs","^X",15,"^14",["^Z",[["^10"]]],"^15",null,"^16",["^Z",[null,null]],"^V",1,"^U",52,"^W",52,"^17",1,"^18",true,"^Y",["^Z",["^[",["^Z",[["^10"]]]]],"^11","Convert `obj` to Unix epoch."]],"~:require-macros",["^ "],"~:cljs.analyzer/constants",["^ ","~:seen",["^:",["^10","^1G","^1=","~:date-time","^1:","~:else","^Q","^1J","^19","^1Z","^1;","~:ns","^=","^1<","^1>","^T","^1A","^X","^1@","^1?","^1C","^1B","^1E","^1D","^V","^21","^>","^1L","^U","^1K","^1O","~$s","^1F","^W","^1H","^1I","^1M","^12","^1[","^Y","^11","^1N","~:test","^20"]],"~:order",["^1O","^1J","^27","^=","^T","^X","^V","^U","^1K","^W","^Y","^11","^1N","^28","^>","^1I","^1L","^1M","^10","^1[","^1Z","^1H","^1F","^1G","^26","^1A","^1@","~$s","^1=","^1;","^1<","^1:","^19","^21","^20","^1E","^1D","^25","^1C","^1B","^12","^Q","^1?","^1>"]],"^11","### Utilites to coerce goog.date DateTime instances to and from\n  various other types.\n\n  For example, to convert a goog.date DateTime to and from a js number:\n\n```clojure\n=> (to-long (date-time 1998 4 25))\n893462400000\n\n=> (from-long 893462400000)\n#<19980425T000000>\n```"]